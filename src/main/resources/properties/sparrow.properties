#----------------------------------------
#数据库相关配置
#----------------------------------------
#配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。
#如果没有配置，将会生成一个名字，格式是："DataSource-" + System.identityHashCode(this).
#另外配置此属性至少在1.0.5版本中是不起作用的，强行设置name会出错。
sparrow.druid.name=sparrow_upms
#这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
sparrow.druid.driverClassName=com.mysql.jdbc.Driver
#连接数据库的url，不同数据库不一样。
sparrow.druid.url=jdbc:mysql://localhost:3306/sparrow_upms?useUnicode=true&characterEncoding=utf8&autoReconnect=true
#连接数据库的用户名
sparrow.druid.username=suojx
#连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter。
sparrow.druid.password=suojx
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，缺省值：0
sparrow.druid.initialSize=5
#最大连接池数量，缺省值：8
sparrow.druid.maxActive=50
#最小连接池数量
sparrow.druid.minIdle=10
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
sparrow.druid.maxWait=60000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
#poolPreparedStatements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
sparrow.druid.maxPoolPreparedStatementPerConnectionSize=20
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
sparrow.druid.validationQuery=SELECT 'x'
#单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
#validationQueryTimeout=
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。缺省值：true
sparrow.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。缺省值：false
sparrow.druid.testOnReturn=false
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。缺省值：false
sparrow.druid.testWhileIdle=true
#有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#缺省值：1分钟（1.0.14）
sparrow.druid.timeBetweenEvictionRunsMillis=60000
#连接保持空闲而不被驱逐的最长时间
sparrow.druid.minEvictableIdleTimeMillis=300000
#物理连接初始化的时候执行的sql
#connectionInitSqls=
#当数据库抛出一些不可恢复的异常时，抛弃连接。缺省值：根据dbType自动识别
#exceptionSorter=
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
sparrow.druid.filters=stat
#类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
#proxyFilters=

#对于建立时间超过removeAbandonedTimeout的连接强制关闭
sparrow.druid.removeAbandoned=true
#指定连接建立多长时间就需要被强制关闭
sparrow.druid.removeAbandonedTimeout=1800
#指定发生removeAbandoned的时候，是否记录当前线程的堆栈信息到日志中
sparrow.druid.logAbandoned=true